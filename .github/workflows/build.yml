name: Build (and Release)
on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Install MSYS2
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2

      - name: Install macOS dependencies
        if: ${{ runner.os == 'macOS' }}
        run: brew install sdl2

      - name: Install Windows dependencies
        if: ${{ runner.os == 'Windows' }}
        shell: msys2 {0}
        run: pacman -S --noconfirm git mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-go

      - name: Install Go dependencies (UNIX)
        if: ${{ runner.os != 'Windows' }}
        run: go get -v

      - name: Install Go dependencies (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go get -v
          go install github.com/tc-hib/go-winres@latest

      - name: Build Linux Cli
        if: ${{ runner.os == 'Linux' }}
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -tags "static cli" -ldflags "-s -w -X 'vencordinstaller/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencordinstaller/buildinfo.InstallerTag=${{ github.ref_name }}'" -o VencordInstallerCli-Linux

      - name: Build MacOS
        if: ${{ runner.os == 'macOS' }}
        run: CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -v -tags static -ldflags "-s -w -X 'vencordinstaller/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencordinstaller/buildinfo.InstallerTag=${{ github.ref_name }}'" -o VencordInstaller

      - name: Build Windows x64 Gui
        if: ${{ runner.os == 'Windows' }}
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          go-winres make --product-version "git-tag"
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -v -tags static -ldflags "-s -w -H=windowsgui -extldflags=-static -X 'vencordinstaller/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencordinstaller/buildinfo.InstallerTag=${{ github.ref_name }}'" -o VencordInstaller-Windows-x64.exe

      - name: Build Windows x86 Cli
        if: ${{ runner.os == 'Windows' }}
        shell: msys2 {0}
        run: |
          export GOROOT=/mingw64/lib/go
          export GOPATH=/mingw64
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -v -tags "static cli" -ldflags "-s -w -extldflags=-static -X 'vencordinstaller/buildinfo.InstallerGitHash=$(git rev-parse --short HEAD)' -X 'vencordinstaller/buildinfo.InstallerTag=${{ github.ref_name }}'" -o VencordInstallerCli-Windows-x86.exe

      - name: Make VencordInstaller executable
        if: ${{ runner.os != 'Windows' }}
        run: find . -type f -name 'VencordInstaller*' | xargs chmod +x

      - name: Generate MacOS bundle
        if: ${{ runner.os == 'macOS' }}
        run: |
          mkdir -p VencordInstaller.app/Contents/MacOS
          mkdir -p VencordInstaller.app/Contents/Resources
          cp macos/Info.plist VencordInstaller.app/Contents/Info.plist
          mv VencordInstaller VencordInstaller.app/Contents/MacOS/VencordInstaller
          cp macos/icon.icns VencordInstaller.app/Contents/Resources/icon.icns
          zip -r VencordInstaller-MacOS.zip VencordInstaller.app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: VencordInstaller-${{ runner.os }}
          path: |
            VencordInstaller*
            !VencordInstaller.app

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: VencordInstaller
          pattern: VencordInstaller-*
          merge-multiple: true

      - name: Create the release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: VencordInstaller/VencordInstaller*
